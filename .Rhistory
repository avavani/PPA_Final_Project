plot.title = element_text(face = "bold", size = 14),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(size = 8))
ggplot(testProbs.thresholds, aes(x = Threshold)) +
geom_line(aes(y = Accuracy, color = "Accuracy")) +
geom_line(aes(y = Rate_TP, color = "True Positive Rate")) +
geom_line(aes(y = Rate_FP, color = "False Positive Rate")) +
scale_color_manual(values = c("Accuracy" = "blue", "True Positive Rate" = "green", "False Positive Rate" = "red")) +
labs(title = "Model Performance Across Different Percentile Cutoffs",
x = "Percentile", y = "Rate") +
theme_minimal() +
theme(legend.title = element_blank(),
legend.position = "bottom",
text = element_text(family = "Times New Roman", size = 12),
plot.title = element_text(face = "bold", size = 14),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(size = 8))
#joining all
bmore_hhinc_change <- left_join(bmore_ctmedhhinc12, bmore_ctmedhhinc22, by = "GEOID") %>%
select(GEOID, percentHighInc12, percentHighInc22, percentLowInc12, percentLowInc22)
#creating my final dataset
all.acs <- left_join(all.acs, bmore_hhinc_change)%>%
mutate(ChangeInHighIncPct = (percentHighInc22 - percentHighInc12),
ChangeInLowIncPct = (percentLowInc22 - percentLowInc12))
#getting my index
all.acs <- all.acs %>%
mutate(genindex = ((ChangeInHighIncPct + HomeValuePctChange + RentPctChange)))
all.acs <- all.acs %>%
mutate(gentrify = case_when((genindex > (quantile(all.acs$genindex, 0.50, na.rm = TRUE)))~ 1,
TRUE ~ 0))
baltimore_tracts <- tracts(state = "MD", county = "Baltimore City", year = 2022)
all.acs.sf <- left_join(baltimore_tracts, all.acs, by = "GEOID")%>%
st_as_sf()
#tm_shape(all.acs.sf) +
#  tm_polygons(col = "gentrify")
p_load(nngeo,FNN,tibble, caret)
bmore_hoods <- bmore_p_lots %>%
select(-p_vacant)
bmore_CSA_data <- bmore_p_lots %>%
st_drop_geometry()%>%
left_join(bmore_business)%>%
st_as_sf()
bmore_CSA_data <- st_join(bmore_CSA_data, school_outcome, left = TRUE)%>%
mutate(CSA = coalesce(CSA.x, CSA.y)) %>%
select(-CSA.x, -CSA.y)%>%
mutate(across(everything(), ~replace_na(., 0)))
bmore_CSA_data <- st_join(bmore_CSA_data, walk_score, left = TRUE)%>%
mutate(CSA = coalesce(CSA.x, CSA.y)) %>%
select(-CSA.x, -CSA.y)%>%
mutate(across(everything(), ~replace_na(., 0)))
coldist <- baltimore_tracts
coldist$nearest_college_index <- st_nearest_feature(coldist, bmore_colleges)
coldist <- coldist %>%
rowwise() %>%
mutate(nearest_college = list(bmore_colleges[nearest_college_index, ]))
coldist <- coldist %>%
mutate(coldist = st_distance(geometry, nearest_college$geometry))%>%
select(-nearest_college_index,
-nearest_college)%>%
rename(collegedist = coldist)%>%
st_drop_geometry()
acs.hoods <- all.acs.sf %>%
st_transform(crs = st_crs(bmore_CSA_data))%>%
st_centroid()%>%
st_join(bmore_CSA_data, join = st_intersects)%>%
mutate(NAME = coalesce(NAME.x, NAME.y)) %>%
select(-NAME.x, -NAME.y)
acs.hoods <- acs.hoods %>%
left_join(coldist)
acs.hoods <- acs.hoods %>%
select(-STATEFP,
-COUNTYFP,
-TRACTCE,
-NAMELSAD,
-MTFCC,
-FUNCSTAT,
-ALAND,
-AWATER,
-INTPTLAT,
-INTPTLON,
-NAME) %>%
st_drop_geometry()%>%
left_join(bmore_bids)%>%
mutate(across(where(is.numeric), ~replace_na(., 0)),
across(where(is.character), ~replace_na(., "Unknown")))
p_load(stargazer)
all.acs.reg <- acs.hoods
all.acs.reg <- all.acs.reg %>%
select(-(ends_with("22")),
-(ends_with("12")),
-genindex,
-CSA,
-RentPctChange,
-HomeValuePctChange,
-MedianRent17,
-MedianHouseholdIncome17,
-MedianRent22,
-BachelorsDegree17,
-MedianHouseholdIncome22,
-MedianHomeValue22,
-MedianHouseholdIncome22,
-percentHighInc22,
-percentHighInc12,
-WhiteAlone17,
-GradProfessionalDegree17,
-MovedWithinCounty17,
-MovedAbroad17,
-OwnerOccupiedHouseholdSize17,
-RenterOccupiedSize17,
-MedianHomeValue17,
-DiffStateMovePct17,
-WhiteAlonePct17,
-AbroadMovePct17,
-collegedist,
-SStateMovePctChange,
-inflation.adjHH17,
-NonFamilyHouseholds17,
-VacantUnitsPctChange)%>%
mutate(walk_school = p_students * walk_score)%>%
mutate(business2 = changebiz ^2)%>%
mutate(upcoming = (changewalk * SStateMovePct17))%>%
select(-p_students,
-walk_score,
-changebiz,
-business_count,
-changewalk)
p_load(stargazer)
all.acs.reg <- acs.hoods
all.acs.reg <- all.acs.reg %>%
select(-(ends_with("22")),
-(ends_with("12")),
-genindex,
-CSA,
-RentPctChange,
-HomeValuePctChange,
-MedianRent17,
-MedianHouseholdIncome17,
-MedianRent22,
-BachelorsDegree17,
-MedianHouseholdIncome22,
-MedianHomeValue22,
-MedianHouseholdIncome22,
-percentHighInc22,
-percentHighInc12,
-WhiteAlone17,
-GradProfessionalDegree17,
-MovedWithinCounty17,
-MovedAbroad17,
-OwnerOccupiedHouseholdSize17,
-RenterOccupiedSize17,
-MedianHomeValue17,
-DiffStateMovePct17,
-WhiteAlonePct17,
-AbroadMovePct17,
-collegedist,
-SStateMovePctChange,
-inflation.adjHH17,
-NonFamilyHouseholds17,
-VacantUnitsPctChange)%>%
mutate(walk_school = p_students * walk_score)%>%
mutate(business2 = changebiz ^2)%>%
mutate(upcoming = (changewalk * SStateMovePct17))%>%
select(-p_students,
-walk_score,
-changebiz,
-business_count,
-changewalk)
all.acs.sf.g <- all.acs.sf %>%
dplyr::select(GEOID, gentrify) %>%
mutate(gentrify = as.factor(gentrify))
ggplot() +
geom_sf(data = water_bound, fill = "steelblue") +
geom_sf(data = md_bound, fill = "gray80", col = "gray75") +
geom_sf(data = all.acs.sf, aes(fill = as.factor(gentrify)), col = "#756059") +
scale_fill_manual(values = c("#5FA08F", "#F56A40"),
labels = c("No", "Yes")) +
geom_sf(data = patapsco, fill = "steelblue", col = "transparent") +
theme_void() +
xlim(-76.75, -76.48) +
ylim(39.2, 39.38) +
theme(legend.position = "bottom", legend.key.width = unit(1.5, "cm")) +
labs(fill = "Gentrified?",
title = "2022 Gentrification per Census Tract",
subtitle = "Baltimore City, MD")
p_load(gridExtra)
aucTable <- testProbs %>%
summarize(AUC = as.numeric(auc(roc(class, probs)))) %>%
mutate(AUC = as.character(round(AUC, 3)))
mutate(testProbs.thresholds, pointSize = ifelse(Threshold == .48, 24, 16)) %>%
ggplot(aes(Rate_FP, Rate_TP)) +
geom_point(aes(shape = pointSize)) + geom_line() + scale_shape_identity() +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey') +
annotation_custom(tableGrob(aucTable, rows = NULL), xmin = .45, xmax = 1, ymin = 0, ymax = .45) +
labs(title="ROC Curves", x="False Positive Rate", y="True Positive Rate") +
plotTheme()+
theme(text = element_text(family = "Times New Roman", size = 12),
plot.title = element_text(face = "bold", size = 14),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(size = 8))
p_load(gridExtra, pROC)
aucTable <- testProbs %>%
summarize(AUC = as.numeric(auc(roc(class, probs)))) %>%
mutate(AUC = as.character(round(AUC, 3)))
mutate(testProbs.thresholds, pointSize = ifelse(Threshold == .48, 24, 16)) %>%
ggplot(aes(Rate_FP, Rate_TP)) +
geom_point(aes(shape = pointSize)) + geom_line() + scale_shape_identity() +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey') +
annotation_custom(tableGrob(aucTable, rows = NULL), xmin = .45, xmax = 1, ymin = 0, ymax = .45) +
labs(title="ROC Curves", x="False Positive Rate", y="True Positive Rate") +
plotTheme()+
theme(text = element_text(family = "Times New Roman", size = 12),
plot.title = element_text(face = "bold", size = 14),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(size = 8))
mutate(testProbs.thresholds, pointSize = ifelse(Threshold == .48, 24, 16)) %>%
ggplot(aes(Rate_FP, Rate_TP)) +
geom_point(aes(shape = pointSize)) + geom_line() + scale_shape_identity() +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey') +
annotation_custom(tableGrob(aucTable, rows = NULL), xmin = .45, xmax = 1, ymin = 0, ymax = .45) +
labs(title="ROC Curves", x="False Positive Rate", y="True Positive Rate") +
plotTheme()+
theme(text = element_text(family = "Times New Roman", size = 12),
plot.title = element_text(face = "bold", size = 14),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(size = 8))
reg.spatialCV <- crossValidate(
dataset = acs.cv,
id = "GEOID",
dependentVariable = "gentrify",
indVariables = reg.vars)%>%
select(GEOID, gentrify, Prediction)
acs.cv <- acs.hoods %>%
left_join(baltimore_tracts)%>%
mutate(across(where(is.numeric), ~replace_na(., 0)),
across(where(is.numeric), ~replace(., is.infinite(.), 0)))%>%
mutate(walk_school = p_students * walk_score,
business2 = changebiz ^2,
upcoming = (changewalk * SStateMovePct17))
reg.vars <- c("TotalPopulation17", "TotalHousingUnits17",
"VacantHousingUnits17", "MovedFromSameState17", "MovedFromDifferentState17",
"FamilyHouseholds17", "PopChangePct", "HUnitsPctChange",
"IncPctChange", "GradPct17", "CountyWWMovePct17",
"SStateMovePct17", "BachelorsPct17", "WhiteAlonePctChange",
"GradPctChange", "CountyWWMovePctChange", "DiffStateMovePctChange",
"AbroadMovePctChange", "BachelorsPctChange", "OOSizePctChange",
"ROSizePctChange", "FamHHPctChange", "NonFamHHPctChange",
"ChangeInHighIncPct", "ChangeInLowIncPct", "gentrify",
"p_vacant", "tractbids", "walk_school",
"business2", "upcoming")
acs.cv <- acs.hoods %>%
left_join(baltimore_tracts)%>%
mutate(across(where(is.numeric), ~replace_na(., 0)),
across(where(is.numeric), ~replace(., is.infinite(.), 0)))%>%
mutate(walk_school = p_students * walk_score,
business2 = changebiz ^2,
upcoming = (changewalk * SStateMovePct17))
acs.hoods <- all.acs.sf %>%
st_transform(crs = st_crs(bmore_CSA_data))%>%
st_centroid()%>%
st_join(bmore_CSA_data, join = st_intersects)%>%
mutate(NAME = coalesce(NAME.x, NAME.y)) %>%
select(-NAME.x, -NAME.y)
acs.hoods <- acs.hoods %>%
left_join(coldist)
acs.hoods <- acs.hoods %>%
select(-STATEFP,
-COUNTYFP,
-TRACTCE,
-NAMELSAD,
-MTFCC,
-FUNCSTAT,
-ALAND,
-AWATER,
-INTPTLAT,
-INTPTLON,
-NAME) %>%
st_drop_geometry()%>%
left_join(bmore_bids)%>%
mutate(across(where(is.numeric), ~replace_na(., 0)),
across(where(is.character), ~replace_na(., "Unknown")))
acs.cv <- acs.hoods %>%
left_join(baltimore_tracts)%>%
mutate(across(where(is.numeric), ~replace_na(., 0)),
across(where(is.numeric), ~replace(., is.infinite(.), 0)))%>%
mutate(walk_school = p_students * walk_score,
business2 = changebiz ^2,
upcoming = (changewalk * SStateMovePct17))
ggplot(testProbs.thresholds, aes(x = Threshold)) +
geom_line(aes(y = Accuracy, color = "Accuracy")) +
geom_line(aes(y = Rate_TP, color = "True Positive Rate")) +
geom_line(aes(y = Rate_FP, color = "False Positive Rate")) +
scale_color_manual(values = c("Accuracy" = "blue", "True Positive Rate" = "green", "False Positive Rate" = "red")) +
labs(title = "Model Performance Across Different Percentile Cutoffs",
x = "Percentile", y = "Rate") +
theme_minimal() +
theme(legend.title = element_blank(),
legend.position = "bottom",
text = element_text(family = "Times New Roman", size = 12),
plot.title = element_text(face = "bold", size = 14),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(size = 8))
acs.cv <- acs.hoods %>%
left_join(baltimore_tracts)%>%
mutate(across(where(is.numeric), ~replace_na(., 0)),
across(where(is.numeric), ~replace(., is.infinite(.), 0)))%>%
mutate(walk_school = p_students * walk_score,
business2 = changebiz ^2,
upcoming = (changewalk * SStateMovePct17))
acs.hoods <- all.acs.sf %>%
st_transform(crs = st_crs(bmore_CSA_data))%>%
st_centroid()%>%
st_join(bmore_CSA_data, join = st_intersects)%>%
mutate(NAME = coalesce(NAME.x, NAME.y)) %>%
select(-NAME.x, -NAME.y)
acs.hoods <- acs.hoods %>%
left_join(coldist)
acs.hoods <- acs.hoods %>%
select(-STATEFP,
-COUNTYFP,
-TRACTCE,
-NAMELSAD,
-MTFCC,
-FUNCSTAT,
-ALAND,
-AWATER,
-INTPTLAT,
-INTPTLON,
-NAME) %>%
st_drop_geometry()%>%
left_join(bmore_bids)%>%
mutate(across(where(is.numeric), ~replace_na(., 0)),
across(where(is.character), ~replace_na(., "Unknown")))
acs.cv <- acs.hoods %>%
left_join(baltimore_tracts)%>%
mutate(across(where(is.numeric), ~replace_na(., 0)),
across(where(is.numeric), ~replace(., is.infinite(.), 0)))%>%
mutate(walk_school = p_students * walk_score,
business2 = changebiz ^2,
upcoming = (changewalk * SStateMovePct17))
#creating my final dataset
all.acs <- left_join(all.acs, bmore_hhinc_change)%>%
mutate(ChangeInHighIncPct = (percentHighInc22 - percentHighInc12),
ChangeInLowIncPct = (percentLowInc22 - percentLowInc12))
#getting my index
all.acs <- all.acs %>%
mutate(genindex = ((ChangeInHighIncPct + HomeValuePctChange + RentPctChange)))
all.acs <- all.acs %>%
mutate(gentrify = case_when((genindex > (quantile(all.acs$genindex, 0.75, na.rm = TRUE)))~ 1,
TRUE ~ 0))
all.acs.sf <- left_join(baltimore_tracts, all.acs, by = "GEOID")%>%
st_as_sf()
acs.hoods <- all.acs.sf %>%
st_transform(crs = st_crs(bmore_CSA_data))%>%
st_centroid()%>%
st_join(bmore_CSA_data, join = st_intersects)%>%
mutate(NAME = coalesce(NAME.x, NAME.y)) %>%
select(-NAME.x, -NAME.y)
acs.hoods <- acs.hoods %>%
left_join(coldist)
acs.hoods <- acs.hoods %>%
select(-STATEFP,
-COUNTYFP,
-TRACTCE,
-NAMELSAD,
-MTFCC,
-FUNCSTAT,
-ALAND,
-AWATER,
-INTPTLAT,
-INTPTLON,
-NAME) %>%
st_drop_geometry()%>%
left_join(bmore_bids)%>%
mutate(across(where(is.numeric), ~replace_na(., 0)),
across(where(is.character), ~replace_na(., "Unknown")))
acs.cv <- acs.hoods %>%
left_join(baltimore_tracts)%>%
mutate(across(where(is.numeric), ~replace_na(., 0)),
across(where(is.numeric), ~replace(., is.infinite(.), 0)))%>%
mutate(walk_school = p_students * walk_score,
business2 = changebiz ^2,
upcoming = (changewalk * SStateMovePct17))
colnames(acs.cv)
acs.cv <- acs.hoods
acs.cv <- acs.cv %>%
left_join(baltimore_tracts)%>%
mutate(across(where(is.numeric), ~replace_na(., 0)),
across(where(is.numeric), ~replace(., is.infinite(.), 0)))%>%
mutate(walk_school = p_students * walk_score,
business2 = changebiz ^2,
upcoming = (changewalk * SStateMovePct17))
colnames(acs.cv)
View(acs.hoods)
colnames(acs.hoods)
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(pacman)
library(dplyr)
p_load(ggplot2, sf, stats, tidycensus, tidyr, mapview, tigris, tmap, tidyverse)
options(tigris_use_cache = TRUE)
md_bound <- counties(state = "MD") %>%
st_transform("EPSG:4269") %>%
erase_water(area_threshold = 0.9)
water_bound <- st_as_sfc(st_bbox(md_bound), crs = "EPSG:4269")
patapsco <- st_read("https://gisdata.baltimorecity.gov/egis/rest/services/OpenBaltimore/Water/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson")
bmorecsa <- st_read("https://services1.arcgis.com/mVFRs7NF4iFitgbY/arcgis/rest/services/Community_Statistical_Areas_(CSAs)__Reference_Boundaries/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson")
#Picking out my variables of interest
acs_vars <- c("B01001_001E",# ACS total Pop estimate
"B25002_001E",# Estimate of total housing units
"B25002_003E",# Number of vacant housing units
"B19013_001E",# Median HH Income ($)
"B02001_002E",# People describing themselves as "white alone"
"B06009_006E", # Total graduate or professional degree
"B07001_033E", #moved in within same county
"B07001_049E", #moved in from same state
"B07001_065E", #moved in different state
"B07001_081E", #moved from abroad
"B06009_005E", #bachelors degree
"B25010_002E", #owner occupied household size
"B25010_003E", #renter occupied HH size
"B11016_002E", #family households
"B11016_009E", #non family households
"B25064_001E", #MEDIAN GROSS RENT
"B25077_001E") #MEDIAN HOME VALUE
#Extracting the data for 2012
bmore_acs17 <- get_acs(
geography = "tract",
variables = acs_vars,
state = "MD",
county = "Baltimore City",
year = 2017,
output = "wide")%>%
rename(TotalPopulation17 = B01001_001E,
TotalHousingUnits17 = B25002_001E,
VacantHousingUnits17 = B25002_003E,
MedianHouseholdIncome17 = B19013_001E,
WhiteAlone17 = B02001_002E,
GradProfessionalDegree17 = B06009_006E,
MovedWithinCounty17 = B07001_033E,
MovedFromSameState17 = B07001_049E,
MovedFromDifferentState17 = B07001_065E,
MovedAbroad17 = B07001_081E,
BachelorsDegree17 = B06009_005E,
OwnerOccupiedHouseholdSize17 = B25010_002E,
RenterOccupiedSize17 = B25010_003E,
FamilyHouseholds17 = B11016_002E,
NonFamilyHouseholds17 = B11016_009E,
MedianRent17 = B25064_001E,
MedianHomeValue17 = B25077_001E)%>%
mutate(inflation.adjHH17 = MedianHouseholdIncome17 * 1.16,
MedianRent17 = MedianRent17 * 1.16,
MedianHomeValue17 = MedianHomeValue17 *1.16)%>%
select(GEOID,NAME,ends_with("17"))
#extracting my data for 2022
bmore_acs22 <- get_acs(
geography = "tract",
variables = acs_vars,
state = "MD",
county = "Baltimore City",
year = 2022,
output = "wide")%>%
rename(TotalPopulation22 = B01001_001E,
TotalHousingUnits22 = B25002_001E,
VacantHousingUnits22 = B25002_003E,
MedianHouseholdIncome22 = B19013_001E,
WhiteAlone22 = B02001_002E,
GradProfessionalDegree22 = B06009_006E,
MovedWithinCounty22 = B07001_033E,
MovedFromSameState22 = B07001_049E,
MovedFromDifferentState22 = B07001_065E,
MovedAbroad22 = B07001_081E,
BachelorsDegree22 = B06009_005E,
OwnerOccupiedHouseholdSize22 = B25010_002E,
RenterOccupiedSize22 = B25010_003E,
FamilyHouseholds22 = B11016_002E,
NonFamilyHouseholds22 = B11016_009E,
MedianRent22 = B25064_001E,
MedianHomeValue22 = B25077_001E)%>%
select(GEOID,NAME,ends_with("22"))
#one census tract has been combined in 2022. So I am adjusting this info in 2012 and joining back
changed_22 <- bmore_acs17 %>%
filter(NAME %in% c("Census Tract 1801, Baltimore city, Maryland",
"Census Tract 1802, Baltimore city, Maryland"))%>%
dplyr::summarize(
TotalPopulation17 = sum(TotalPopulation17),
TotalHousingUnits17 = sum(TotalHousingUnits17),
VacantHousingUnits17 = sum(VacantHousingUnits17),
MedianHouseholdIncome17 = mean(MedianHouseholdIncome17),
WhiteAlone17 = sum(WhiteAlone17),
GradProfessionalDegree17 = sum(GradProfessionalDegree17),
MovedWithinCounty17 = sum(MovedWithinCounty17),
MovedFromSameState17 = sum(MovedFromSameState17),
MovedFromDifferentState17 = sum(MovedFromDifferentState17),
MovedAbroad17 = sum(MovedAbroad17),
BachelorsDegree17 = sum(BachelorsDegree17),
OwnerOccupiedHouseholdSize17 = mean(OwnerOccupiedHouseholdSize17),
RenterOccupiedSize17 = mean(RenterOccupiedSize17),
FamilyHouseholds17 = sum(FamilyHouseholds17),
NonFamilyHouseholds17 = sum(NonFamilyHouseholds17),
inflation.adjHH17 = mean(inflation.adjHH17),
MedianRent17 = mean(MedianRent17),
MedianHomeValue17 = mean(MedianRent17)
) %>%
dplyr::mutate(
NAME = "Census Tract 2806, Baltimore city, Maryland",
GEOID = "24510280600"
)
#joining back adjusted info
bmore_acs17 <- bmore_acs17 %>%
filter(!(NAME %in% c("Census Tract 1801, Baltimore city, Maryland",
"Census Tract 1802, Baltimore city, Maryland"))) %>%
bind_rows(changed_22)
```
